@using Saned.Jazan.Data.Core.Models
@model Saned.Jazan.Admin.Models.AdvertisementModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="grid-body">

    <div class="form-horizontal">
    <h4>AdvertisementModel</h4>
    <hr/>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CityName, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.CityName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CityName, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.DropDownListFor(model => model.CategoryId, ((List<Category>) ViewBag.Categories).Select(m => new SelectListItem {Text = m.CategoryNameAr, Value = m.CategoryId.ToString()}), new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PackageId, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.DropDownListFor(model => model.PackageId, ((List<Package>) ViewBag.Pakages).Select(m => new SelectListItem {Text = m.ArabicName, Value = m.Id.ToString()}), new {htmlAttributes = new {@class = "form-control"}})


            @Html.ValidationMessageFor(model => model.PackageId, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.ImageUrl, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Latitude, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Latitude, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Latitude, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Longitude, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Longitude, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Longitude, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WorkingHours, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.WorkingHours, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.WorkingHours, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Mobile, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Mobile, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WebSite, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.WebSite, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.WebSite, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Twitter, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Twitter, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Twitter, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FaceBook, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.FaceBook, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.FaceBook, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Instagram, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Instagram, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Instagram, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Snapchat, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.Snapchat, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Snapchat, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsApproved, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            <div style="display: block;">
                <input type="checkbox" id="IsApproved" value="true" name="IsApproved">
                <input type="hidden" value="false" name="IsApproved"/>
                <label class="k-checkbox-label" for="IsApproved"></label>
            </div>

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            <div style="display: block;">
                <input type="checkbox" id="IsActive" value="true" name="IsActive">
                <input type="hidden" value="false" name="IsActive"/>
                <label class="k-checkbox-label" for="IsActive"></label>
            </div>

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.DropDownListFor(model => model.CreatedBy, ((List<ApplicationUser>) ViewBag.Users).Select(m => new SelectListItem {Text = m.Name, Value = m.Id}), "Select User...", new {htmlAttributes = new {@class = "form-control"}})


            @Html.ValidationMessageFor(model => model.CreatedBy, "", new {@class = "text-danger"})
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.DropDownListFor(model => model.UpdatedBy, ((List<ApplicationUser>) ViewBag.Users).Select(m => new SelectListItem {Text = m.Name, Value = m.Id}), "Select User...", new {htmlAttributes = new {@class = "form-control"}})

            @Html.ValidationMessageFor(model => model.UpdatedBy, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new {@class = "col-sm-2 col-xs-12 control-label"})
        <div class="col-sm-4 col-xs-12">
            @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6 col-xs-12">
            <input type="submit" value="Create" class="btn btn-success pull-right"/>
        </div>
    </div>
    </div>
    </div>
}

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

